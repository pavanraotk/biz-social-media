openapi: 3.0.3
info:
  title: Business Social Media API
  description: API for managing business users in social media platform
  version: 1.0.0
  contact:
    name: Business Social Media Team
    email: support@bizsocialmedia.com

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /api/business-users:
    get:
      tags:
        - business-users
      summary: Get all business users
      description: Retrieve a list of all business users
      operationId: getAllBusinessUsers
      responses:
        '200':
          description: List of business users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessUser'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - business-users
      summary: Create a new business user
      description: Create a new business user
      operationId: createBusinessUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessUserCreate'
      responses:
        '201':
          description: Business user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/business-users/{id}:
    get:
      tags:
        - business-users
      summary: Get business user by ID
      description: Retrieve a specific business user by their ID
      operationId: getBusinessUserById
      parameters:
        - name: id
          in: path
          required: true
          description: Business user ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Business user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUser'
        '404':
          description: Business user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - business-users
      summary: Update business user
      description: Update an existing business user
      operationId: updateBusinessUser
      parameters:
        - name: id
          in: path
          required: true
          description: Business user ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessUserUpdate'
      responses:
        '200':
          description: Business user updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Business user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - business-users
      summary: Delete business user
      description: Delete a business user by ID
      operationId: deleteBusinessUser
      parameters:
        - name: id
          in: path
          required: true
          description: Business user ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Business user deleted successfully
        '404':
          description: Business user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/business-users/search:
    get:
      tags:
        - business-users
      summary: Search business users by company name
      description: Search for business users by company name (case-insensitive)
      operationId: searchBusinessUsersByCompanyName
      parameters:
        - name: companyName
          in: query
          required: true
          description: Company name to search for
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Invalid search parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    BusinessUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the business user
          example: 1
        companyName:
          type: string
          description: Name of the company
          maxLength: 100
          example: "Tech Innovations Inc"
        email:
          type: string
          format: email
          description: Email address of the business user
          example: "contact@techinnovations.com"
        description:
          type: string
          description: Description of the business
          maxLength: 500
          example: "Leading technology solutions provider"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the user was created
          example: "2023-01-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the user was last updated
          example: "2023-01-01T12:00:00Z"
      required:
        - id
        - companyName
        - email
        - createdAt
        - updatedAt

    BusinessUserCreate:
      type: object
      properties:
        companyName:
          type: string
          description: Name of the company
          maxLength: 100
          minLength: 1
          example: "Tech Innovations Inc"
        email:
          type: string
          format: email
          description: Email address of the business user
          example: "contact@techinnovations.com"
        description:
          type: string
          description: Description of the business
          maxLength: 500
          example: "Leading technology solutions provider"
      required:
        - companyName
        - email

    BusinessUserUpdate:
      type: object
      properties:
        companyName:
          type: string
          description: Name of the company
          maxLength: 100
          minLength: 1
          example: "Tech Innovations Inc"
        email:
          type: string
          format: email
          description: Email address of the business user
          example: "contact@techinnovations.com"
        description:
          type: string
          description: Description of the business
          maxLength: 500
          example: "Leading technology solutions provider"
      required:
        - companyName
        - email

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Business user not found"
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the error occurred
          example: "2023-01-01T12:00:00Z"
        path:
          type: string
          description: Request path that caused the error
          example: "/api/business-users/123"
      required:
        - message
        - timestamp
        - path